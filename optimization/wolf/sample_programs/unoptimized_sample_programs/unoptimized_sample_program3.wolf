`
  A branch where the condition always evaluates to true
  and a branch where the condition always evaluates to false.
  Also handle multiplication by 0.
  Since multiplication by 0 removes myNegativeNumber, also remove it's definition.
`
def int myNumber(int num) := ; =(0,0) ? @(num) : ~(num)
def int myNegativeNumber(int num) := ; =(0,1) ? @(num) : ~(num)
myNumber(*(myNegativeNumber(2),0))
