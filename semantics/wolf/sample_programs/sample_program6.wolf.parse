Sig parsed successfully: ( ) NativeUnaryOp parsed successfully: ! NativeBinOp parsed successfully: | NativeBinOp parsed successfully: & NativeBinOp parsed successfully: x Arg parsed successfully: 1 Arg parsed successfully: 0 Function parsed successfully: x ( 1 , 0 ) Arg parsed successfully: x ( 1 , 0 ) Arg parsed successfully: 2 Function parsed successfully: & ( x ( 1 , 0 ) , 2 ) Arg parsed successfully: & ( x ( 1 , 0 ) , 2 ) NativeUnaryOp parsed successfully: ~ Arg parsed successfully: 8 Function parsed successfully: ~ ( 8 ) Arg parsed successfully: ~ ( 8 ) Function parsed successfully: | ( & ( x ( 1 , 0 ) , 2 ) , ~ ( 8 ) ) Arg parsed successfully: | ( & ( x ( 1 , 0 ) , 2 ) , ~ ( 8 ) ) Function parsed successfully: ! ( | ( & ( x ( 1 , 0 ) , 2 ) , ~ ( 8 ) ) ) Def parsed successfully: def logical ( ) := ! ( | ( & ( x ( 1 , 0 ) , 2 ) , ~ ( 8 ) ) ) Sig parsed successfully: ( ) NativeBinOp parsed successfully: | NativeBinOp parsed successfully: & NativeBinOp parsed successfully: > Arg parsed successfully: 5 Arg parsed successfully: 2 Function parsed successfully: > ( 5 , 2 ) Arg parsed successfully: > ( 5 , 2 ) NativeBinOp parsed successfully: != Arg parsed successfully: 1 Arg parsed successfully: 2 Function parsed successfully: != ( 1 , 2 ) Arg parsed successfully: != ( 1 , 2 ) Function parsed successfully: & ( > ( 5 , 2 ) , != ( 1 , 2 ) ) Arg parsed successfully: & ( > ( 5 , 2 ) , != ( 1 , 2 ) ) NativeBinOp parsed successfully: x NativeBinOp parsed successfully: >= Arg parsed successfully: 1 Arg parsed successfully: 0 Function parsed successfully: >= ( 1 , 0 ) Arg parsed successfully: >= ( 1 , 0 ) NativeBinOp parsed successfully: <= NativeBinOp parsed successfully: % Arg parsed successfully: 5 Arg parsed successfully: 2 Function parsed successfully: % ( 5 , 2 ) Arg parsed successfully: % ( 5 , 2 ) NativeBinOp parsed successfully: / Arg parsed successfully: 6 Arg parsed successfully: 4 Function parsed successfully: / ( 6 , 4 ) Arg parsed successfully: / ( 6 , 4 ) Function parsed successfully: <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) Arg parsed successfully: <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) Function parsed successfully: x ( >= ( 1 , 0 ) , <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) ) Arg parsed successfully: x ( >= ( 1 , 0 ) , <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) ) Function parsed successfully: | ( & ( > ( 5 , 2 ) , != ( 1 , 2 ) ) , x ( >= ( 1 , 0 ) , <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) ) ) Def parsed successfully: def relational ( ) := | ( & ( > ( 5 , 2 ) , != ( 1 , 2 ) ) , x ( >= ( 1 , 0 ) , <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) ) ) NativeUnaryOp parsed successfully: _ NativeUnaryOp parsed successfully: r ArgList parsed successfully: ( ) Arg parsed successfully: logical ( ) Args parsed successfully: logical ( ) List parsed successfully: [ logical ( ) ] Arg parsed successfully: [ logical ( ) ] ArgList parsed successfully: ( ) Arg parsed successfully: relational ( ) Args parsed successfully: relational ( ) List parsed successfully: [ relational ( ) ] Arg parsed successfully: [ relational ( ) ] ArgRest parsed successfully: , [ relational ( ) ] Args parsed successfully: [ logical ( ) ] , [ relational ( ) ] List parsed successfully: [ [ logical ( ) ] , [ relational ( ) ] ] Arg parsed successfully: [ [ logical ( ) ] , [ relational ( ) ] ] Function parsed successfully: r ( [ [ logical ( ) ] , [ relational ( ) ] ] ) Arg parsed successfully: r ( [ [ logical ( ) ] , [ relational ( ) ] ] ) Function parsed successfully: _ ( r ( [ [ logical ( ) ] , [ relational ( ) ] ] ) ) Program parsed successfully: def logical ( ) := ! ( | ( & ( x ( 1 , 0 ) , 2 ) , ~ ( 8 ) ) ) def relational ( ) := | ( & ( > ( 5 , 2 ) , != ( 1 , 2 ) ) , x ( >= ( 1 , 0 ) , <= ( % ( 5 , 2 ) , / ( 6 , 4 ) ) ) ) _ ( r ( [ [ logical ( ) ] , [ relational ( ) ] ] ) ) 