// Kevin Dittmar
// William Ezekiel
// Joe Alacqua

Program = DefList Function
Program = Function

DefList = Def DefList
DefList = Def

Def = def Type identifier Sig assign Function

Sig = l_paren r_paren
Sig = l_paren SigArgs r_paren

SigArgs = SigArg SigArgRest*

SigArg = Type identifier

SigArgRest = comma identifier

Function = UserFunc
Function = NativeUnary
Function = NativeBinary
Function = NativeListUnary
Function = NativeListBinary
Function = Branch
Function = Fold
Function = Map

UserFunc = UserFuncName ArgList

UserFuncName = identifier
UserFuncName = Lambda

NativeUnary = NativeUnaryOp l_paren Arg r_paren

NativeUnaryOp = neg
NativeUnaryOp = logical_not
NativeUnaryOp = identity
NativeUnaryOp = print

NativeBinary = NativeBinOp l_paren Arg comma Arg r_paren

NativeBinOp = plus
NativeBinOp = minus
NativeBinOp = mult
NativeBinOp = div
NativeBinOp = mod
NativeBinOp = lt
NativeBinOp = gt
NativeBinOp = lte
NativeBinOp = gte
NativeBinOp = equal
NativeBinOp = not_equal
NativeBinOp = and
NativeBinOp = or
NativeBinOp = xor

Branch = semi Function ternary_question_mark Function ternary_colon Function

Fold = FoldSymbol FoldBody

FoldSymbol = foldl
FoldSymbol = foldr

FoldBody = l_paren Binary comma ListArgument r_paren

Binary = NativeBinary
Binary = NativeListBinary
Binary = UserFunc
Binary = LambdaFunc

Map = map l_paren Unary comma ListArgument r_paren

Unary = NativeUnary
Unary = NativeListUnary
Unary = UserFunc
Unary = LambdaFunc

Lambda = lambda_start l_paren Sig lambda_arrow Function r_paren

LambdaFunc = Lambda ArgList

ListArgument = List
ListArgument = identifier
ListArgument = Function

NativeListBinary = NativeListBinOp l_paren Arg comma ListArgument r_paren
NativeListBinOp = append
NativeListBinOp = prepend

NativeListUnary = NativeListUnaryOp l_paren ListArgument r_paren
NativeListUnaryOp = head
NativeListUnaryOp = tail
NativeListUnaryOp = reverse
NativeListUnaryOp = flatten
NativeListUnaryOp = length
          
ArgList = l_paren r_paren
ArgList = l_paren Args r_paren

Args = Arg ArgRest*

ArgRest = comma Arg

Arg = Function
Arg = List
Arg = int_number
Arg = float_number
Arg = identifier
Arg = String

String = string_start StringMiddle* string_end

StringMiddle = String_body
StringMiddle = StringEscapeSeq

StringEscapeSeq = string_escape EscapeChar

EscapeChar = escape_alarm
EscapeChar = escape_backspace
EscapeChar = escape_formfeed
EscapeChar = escape_carriage_return
EscapeChar = escape_newline
EscapeChar = escape_tab
EscapeChar = escape_vertical_tab
EscapeChar = escape_backslash
EscapeChar = escape_single_quote
EscapeChar = escape_double_quote
EscapeChar = escape_question_mark
EscapeChar = escape_octal_char
EscapeChar = escape_hex_char
EscapeChar = escape_unicode_char
EscapeChar = escape_default

List = start_list end_list
List = start_list Args end_list

Type = FlatType
Type = list_type FlatType

FlatType = int_type
FlatType = float_type
FlatType = string_type