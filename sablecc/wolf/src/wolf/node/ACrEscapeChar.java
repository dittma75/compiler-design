/* This file was generated by SableCC (http://www.sablecc.org/). */

package wolf.node;

import wolf.analysis.*;

@SuppressWarnings("nls")
public final class ACrEscapeChar extends PEscapeChar
{
    private TEscapeCarriageReturn _escapeCarriageReturn_;

    public ACrEscapeChar()
    {
        // Constructor
    }

    public ACrEscapeChar(
        @SuppressWarnings("hiding") TEscapeCarriageReturn _escapeCarriageReturn_)
    {
        // Constructor
        setEscapeCarriageReturn(_escapeCarriageReturn_);

    }

    @Override
    public Object clone()
    {
        return new ACrEscapeChar(
            cloneNode(this._escapeCarriageReturn_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACrEscapeChar(this);
    }

    public TEscapeCarriageReturn getEscapeCarriageReturn()
    {
        return this._escapeCarriageReturn_;
    }

    public void setEscapeCarriageReturn(TEscapeCarriageReturn node)
    {
        if(this._escapeCarriageReturn_ != null)
        {
            this._escapeCarriageReturn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._escapeCarriageReturn_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._escapeCarriageReturn_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._escapeCarriageReturn_ == child)
        {
            this._escapeCarriageReturn_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._escapeCarriageReturn_ == oldChild)
        {
            setEscapeCarriageReturn((TEscapeCarriageReturn) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
