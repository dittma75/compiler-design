/* This file was generated by SableCC (http://www.sablecc.org/). */

package wolf.node;

import wolf.analysis.*;

@SuppressWarnings("nls")
public final class AQuestionMarkEscapeChar extends PEscapeChar
{
    private TEscapeQuestionMark _escapeQuestionMark_;

    public AQuestionMarkEscapeChar()
    {
        // Constructor
    }

    public AQuestionMarkEscapeChar(
        @SuppressWarnings("hiding") TEscapeQuestionMark _escapeQuestionMark_)
    {
        // Constructor
        setEscapeQuestionMark(_escapeQuestionMark_);

    }

    @Override
    public Object clone()
    {
        return new AQuestionMarkEscapeChar(
            cloneNode(this._escapeQuestionMark_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAQuestionMarkEscapeChar(this);
    }

    public TEscapeQuestionMark getEscapeQuestionMark()
    {
        return this._escapeQuestionMark_;
    }

    public void setEscapeQuestionMark(TEscapeQuestionMark node)
    {
        if(this._escapeQuestionMark_ != null)
        {
            this._escapeQuestionMark_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._escapeQuestionMark_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._escapeQuestionMark_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._escapeQuestionMark_ == child)
        {
            this._escapeQuestionMark_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._escapeQuestionMark_ == oldChild)
        {
            setEscapeQuestionMark((TEscapeQuestionMark) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
