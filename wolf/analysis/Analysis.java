/* This file was generated by SableCC (http://www.sablecc.org/). */

package wolf.analysis;

import wolf.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTHead(THead node);
    void caseTTail(TTail node);
    void caseTReverse(TReverse node);
    void caseTAppend(TAppend node);
    void caseTPrepend(TPrepend node);
    void caseTFoldl(TFoldl node);
    void caseTFoldr(TFoldr node);
    void caseTMap(TMap node);
    void caseTLambda(TLambda node);
    void caseTLength(TLength node);
    void caseTPrint(TPrint node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTDef(TDef node);
    void caseTReturn(TReturn node);
    void caseTComment(TComment node);
    void caseTSpace(TSpace node);
    void caseTAssign(TAssign node);
    void caseTEqual(TEqual node);
    void caseTLt(TLt node);
    void caseTGt(TGt node);
    void caseTNotEqual(TNotEqual node);
    void caseTLte(TLte node);
    void caseTGte(TGte node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTXor(TXor node);
    void caseTLogicalNot(TLogicalNot node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTNeg(TNeg node);
    void caseTLParen(TLParen node);
    void caseTRParen(TRParen node);
    void caseTStartList(TStartList node);
    void caseTEndList(TEndList node);
    void caseTComma(TComma node);
    void caseTColon(TColon node);
    void caseTSemi(TSemi node);
    void caseTString(TString node);
    void caseTIdentifier(TIdentifier node);
    void caseTIntNumber(TIntNumber node);
    void caseTFloatNumber(TFloatNumber node);
    void caseTMisc(TMisc node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
