`Sorts a list of numbers with insertion sort`
`
insertion sort algorithm converted from Haskell from:
http://en.literateprograms.org/Insertion_sort_%28Haskell%29
`

?insert(n, list) :=
    =(#(list), 0) : @ $(n, [])
    ; <=(n, h(list)) : @ ^(n, list)
    ; @ ^(h(list), insert(n, t(list)))
    
?sort(list) := =(#(list, 0)) : @ list ; @ insert(h(list), t(list))

sort(list)
`Assuming sort is called with the argument [2,7,1,6], the
trace would be the following:              
sort([2,7,1,6]) = insert(2, sort([7,1,6]))
                = insert(2, insert(7, sort([1,6])))
                = insert(2, insert(7, insert(1, sort([6]))))
                = insert(2, insert(7, insert(1, insert(6, sort([])))))
                = insert(2, insert(7, insert(1, insert(6, []))))
                = insert(2, insert(7, insert(1, [6])))
                = insert(2, insert(7, [1,6]))
                = insert(2, ^(1, insert(7, [6])))
                = insert(2, ^(1, ^(6, insert(7, []))))
                = insert(2, ^(1, ^(6, [7])))
                = insert(2, ^(1, [6,7]))
                = insert(2, [1,6,7])
                = ^(1, insert(2, [6,7]))
                = ^(1, [2,6,7])
                = [1,2,6,7]
`