Program,Def,Func,Sig,SigArgs,SigArgRest,FuncName,ArgList,Args,ArgRest,Arg,Branch,If,Else,List;

# Still draft, all "commented out (#)" lines need to have their *'s split into two statements like Bergmann
# did in class. Based on 'grammar_draft.txt' in the 'lr_parser_phase' directory. 

#Program = DefList Func

DefList = DefList Def
DefList = ε

Def = def id Sig := Func
Sig = ( )
Sig = ( SigArgs)
SigArgs = id SigArgList

SigArgList = SigArgList SigArgRest
SigArgList = ε

SigArgRest = , id

Func = FuncName ArgList
Func = Branch

FuncName = id
FuncName = h
FuncName = t
FuncName = r
FuncName = ^
FuncName = $
FuncName = .
FuncName = #
FuncName = {
FuncName = }
FuncName = _
FuncName = @
FuncName = print
FuncName = \
FuncName = ~
FuncName = !
FuncName = op

ArgList = ( )
ArgList = ( Args )
Args = Arg ArgList
ArgList = ArgList ArgRest
ArgList = ε
ArgRest = , Arg

Arg = Func
Arg = List
Arg = float_literal
Arg = string_literal
Arg = int_literal
Arg = id

Branch = If : Else
If = Func ? Func
Else = Func

List = [ Args ]
