Program = DefList Func
DefList = DefList Def
DefList = ε
Def = def id Sig := Func
Sig = ( )
Sig = ( SigArgs)
SigArgs = id SigArgList
SigArgList = SigArgList SigArgRest
SigArgList = ε
SigArgRest = , id
Func = FuncName ArgList
Func = Branch
FuncName = id
FuncName = h
FuncName = t
FuncName = r
FuncName = ^
FuncName = $
FuncName = .
FuncName = #
FuncName = {
FuncName = }
FuncName = _
FuncName = @
FuncName = print
FuncName = \
FuncName = ~
FuncName = !
FuncName = op
ArgList = ( )
ArgList = ( Args )
Args = Arg ArgRestList
ArgRestList = ArgRestList ArgRest
ArgRestList = ε
ArgRest = , Arg
Arg = Func
Arg = List
Arg = float_literal
Arg = string_literal
Arg = int_literal
Arg = id
Branch = If : Else
If = Func ? Func
Else = Func
List = [ Args ]
