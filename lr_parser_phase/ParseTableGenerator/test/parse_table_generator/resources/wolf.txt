l_paren r_paren comma semi ternary_colon ternary_question_mark
def head tail reverse append prepend foldl foldr map flatten length
lambda_start plus minus mult div identity print neg logical_not
mod lt gt less_than_equal greater_than_equal equal not_equal and or xor
float_number int_number
identifier string_start string_end string_body string_escape
escape_alarm escape_backspace escape_formfeed escape_carriage_return
escape_newline escape_tab escape_vertical_tab escape_backslash
escape_single_quote escape_double_quote escape_question_mark
escape_octal_char escape_hex_char escape_unicode_char escape_default
start_list end_list assign misc

Program'
$
Program' = Program $
Program = DefList Func
Program = Func
DefList = DefList DefHeader
DefList = DefHeader
DefHeader = def identifier Sig assign Func
Sig = l_paren r_paren
Sig = l_paren SArgs r_paren
SArgs = SArgs SARest
SArgs = identifier
SARest = comma identifier
Func = FName ArgList
Func = Branch
FName = identifier
FName = head
FName = tail
FName = reverse
FName = prepend
FName = append
FName = map
FName = length
FName = foldl
FName = foldr
FName = flatten
FName = identity
FName = print
FName = lambda_start
FName = neg
FName = logical_not
FName = plus
FName = minus
FName = mult
FName = div
FName = mod
FName = lt
FName = gt
FName = less_than_equal
FName = greater_than_equal
FName = equal
FName = not_equal
FName = and
FName = or
FName = xor
ArgList = l_paren l_paren
ArgList = l_paren Args r_paren
Args = identifier
Args = Args ARest
ARest = comma Arg
Arg = Func
Arg = List
Arg = float_number
Arg = int_number
Arg = identifier
Arg = String
String = string_start string_end
String = string_start StrMiddle string_end
StrMiddle = StrMiddle string_body
StrMiddle = string_body
StrMiddle = StrMiddle StrEscapeSeq
StrMiddle = StrEscapeSeq
StrEscapeSeq = string_escape EscapeChar
EscapeChar = escape_alarm
EscapeChar = escape_backspace
EscapeChar = escape_formfeed
EscapeChar = escape_carriage_return
EscapeChar = escape_newline
EscapeChar = escape_tab
EscapeChar = escape_vertical_tab
EscapeChar = escape_backslash
EscapeChar = escape_single_quote
EscapeChar = escape_double_quote
EscapeChar = escape_question_mark
EscapeChar = escape_octal_char
EscapeChar = escape_hex_char
EscapeChar = escape_unicode_char
EscapeChar = escape_default
Branch = semi Cond ternary_question_mark If ternary_colon Else
Cond = Func
If = Func
Else = Func
List = start_list Args end_list
List = start_list end_list